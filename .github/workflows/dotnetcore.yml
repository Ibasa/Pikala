name: .NET Core

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  lint:
    # We lint in a seperate job so we can use the dotnet 6.0 sdk which has dotnet format

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Lint with dotnet format
      run: dotnet format --verify-no-changes

  build:
    # Build and test with all supported dotnet versions (see https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core for what we should support)

    runs-on: ubuntu-latest
    name: "build (${{ matrix.dotnet.version }})"
    
    strategy:
        matrix:
            dotnet: [
                {
                    version: "6.0",
                    moniker: "net6.0"
                }
            ]

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core 6.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build with dotnet
      run: dotnet build --configuration Release
    - name: Test with dotnet
      run: dotnet test --configuration Release --no-build --framework ${{ matrix.dotnet.moniker }} --results-directory tests/TestResults --blame-hang --blame-hang-timeout 60m --diag tests/TestResults/diagnostics.txt
    - name: Archive test results
      if: ${{ ! cancelled() }}
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: tests/TestResults

  pack:
    
    runs-on: ubuntu-latest

    needs: [lint, build]

    steps:
    - uses: actions/checkout@v2

    - name: Pack with dotnet
      run: dotnet pack --configuration Release --output output
    - name: Publish NuGet
      if: github.ref == 'refs/heads/main'
      run: dotnet nuget push -s https://api.nuget.org/v3/index.json -k ${NUGET_API_KEY} --skip-duplicate ./output/*.nupkg
      env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
